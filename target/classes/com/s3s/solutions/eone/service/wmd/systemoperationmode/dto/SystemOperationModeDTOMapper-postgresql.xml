<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.s3s.solutions.eone.service.wmd.systemoperationmode.SystemOperationModeMapper">

	<sql id="systemOperationModeSelect">
		SELECT
			  system_operation_mode_id
			, system_operation_mode_name
			, system_operation_mode_desc
			, del_yn
			, reg_dt
			, reg_id
			, mod_dt
			, mod_id
		FROM wmd_system_operation_mode
	</sql>


	<sql id="systemOperationModeListWhere">
		<where>
			<if test=" param != null and param.systemOperationModeId != null and param.systemOperationModeId != '' ">
				AND system_operation_mode_id = #{param.systemOperationModeId}
			</if>
			<if test=" param != null and param.systemOperationModeName != null and param.systemOperationModeName != '' ">
				AND system_operation_mode_name = #{param.systemOperationModeName}
			</if>
			<if test=" param != null and param.systemOperationModeDesc != null and param.systemOperationModeDesc != '' ">
				AND system_operation_mode_desc = #{param.systemOperationModeDesc}
			</if>
			<if test=" param != null and param.delYn != null and param.delYn != '' ">
				AND del_yn = #{param.delYn}
			</if>
		</where>
	</sql>


	<select id="selectList" resultType="com.s3s.solutions.eone.service.wmd.systemoperationmode.SystemOperationModeVO">
		/* SystemOperationModeDTOMapper-postgresql selectList */
		<include refid="systemOperationModeSelect" />
		<include refid="systemOperationModeListWhere" />
		ORDER BY system_operation_mode_id
		<if test=" paging != null ">
			OFFSET #{paging.number} * #{paging.size} LIMIT #{paging.size}
		</if>
	</select>


	<select id="selectListTotalRows" resultType="int">
		/* SystemOperationModeDTOMapper-postgresql selectListTotalRows */
		SELECT
			COUNT(*) AS totalRows
		FROM (
			<include refid="systemOperationModeSelect" />
			<include refid="systemOperationModeListWhere" />
		) AS pageTable
	</select>


	<select id="selectDetail" resultType="com.s3s.solutions.eone.service.wmd.systemoperationmode.SystemOperationModeVO">
		/* SystemOperationModeDTOMapper-postgresql selectDetail */
		<include refid="systemOperationModeSelect" />
		WHERE system_operation_mode_id = #{systemOperationModeId}
	</select>


	<insert id="insert">
		/* SystemOperationModeDTOMapper-postgresql insert */
		INSERT INTO wmd_system_operation_mode
		(
			  system_operation_mode_id
			, system_operation_mode_name
			, system_operation_mode_desc
			, reg_dt
			, reg_id
		)
		VALUES
		(
			  #{systemOperationModeId}
			, #{systemOperationModeName}
			, #{systemOperationModeDesc}
			, #{regDt}::timestamp
			, #{regId}
		)
	</insert>


	<update id="update">
		/* SystemOperationModeDTOMapper-postgresql update */
		UPDATE wmd_system_operation_mode
		<set>
			<if test=" systemOperationModeName != null and systemOperationModeName != '' ">
				system_operation_mode_name = #{systemOperationModeName} ,
			</if>
			<if test=" systemOperationModeDesc != null and systemOperationModeDesc != '' ">
				system_operation_mode_desc = #{systemOperationModeDesc} ,
			</if>
			<if test=" delYn != null and delYn != '' ">
				del_yn = #{delYn} ,
			</if>
			<if test=" modDt != null and modDt != '' ">
				mod_dt = #{modDt}::timestamp ,
			</if>
			<if test=" modId != null and modId != '' ">
				mod_id = #{modId} ,
			</if>
		</set>
		WHERE system_operation_mode_id = #{systemOperationModeId}
	</update>


	<update id="delete">
		/* SystemOperationModeDTOMapper-postgresql delete */
		UPDATE wmd_system_operation_mode
		SET del_yn = 'Y'
			,mod_dt = #{modDt}::timestamp
			,mod_id = #{modId}
		WHERE system_operation_mode_id = #{systemOperationModeId}
	</update>


	<update id="merge">
		/* SystemOperationModeDTOMapper-postgresql merge */
		WITH T AS
		(
			SELECT
				  #{systemOperationModeId}::text AS system_operation_mode_id
				, #{systemOperationModeName}::text AS system_operation_mode_name
				, #{systemOperationModeDesc}::text AS system_operation_mode_desc
				, #{regDt}::timestamp AS reg_dt
				, #{regId}::text AS reg_id
		),
		UPDATE_OPTION AS
		(
			UPDATE wmd_system_operation_mode U
			<set>
				<if test=" systemOperationModeName != null and systemOperationModeName != '' ">
					system_operation_mode_name = #{systemOperationModeName} ,
				</if>
				<if test=" systemOperationModeDesc != null and systemOperationModeDesc != '' ">
					system_operation_mode_desc = #{systemOperationModeDesc} ,
				</if>
				<if test=" delYn != null and delYn != '' ">
					del_yn = #{delYn} ,
				</if>
				<if test=" modDt != null and modDt != '' ">
					mod_dt = #{modDt}::timestamp ,
				</if>
				<if test=" modId != null and modId != '' ">
					mod_id = #{modId} ,
				</if>
			</set>
			FROM T
			WHERE
				U.system_operation_mode_id = T.system_operation_mode_id
		)
		INSERT INTO wmd_system_operation_mode
		(
			  system_operation_mode_id
			, system_operation_mode_name
			, system_operation_mode_desc
			, reg_dt
			, reg_id
		)
		SELECT
			  T.system_operation_mode_id
			, T.system_operation_mode_name
			, T.system_operation_mode_desc
			, T.reg_dt
			, T.reg_id
		FROM T
		WHERE NOT EXISTS
		(
		SELECT
			system_operation_mode_id
		FROM wmd_system_operation_mode AS TMP
		WHERE TMP.system_operation_mode_id = T.system_operation_mode_id
		)
	</update>


</mapper>